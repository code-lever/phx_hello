version: '3.8'

networks:
  caddy:
    driver: overlay
    attachable: true

volumes:
  postgres_data: {}
  caddy_data: {}

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:2.7.1
    ports:
      - 80:80
      - 443:443
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # this volume is needed to keep the certificates
      # otherwise, new ones will be re-issued upon restart
      - caddy_data:/data
    environment:
      # This must match the network name generated by docker stack or docker compose
      - CADDY_INGRESS_NETWORKS=hello_app_caddy
    deploy:
      # labels: # Global options
        # caddy.email: you@example.com
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure

  db:
    image: postgres:14.5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    env_file:
      - config/docker.env
    networks:
      - caddy

  web:
    image: hello_app:0.3.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - db
    env_file:
      - config/docker.env
    networks:
      - caddy
    labels:
      caddy: localhost
      caddy.reverse_proxy: "{{upstreams 4000}}"
